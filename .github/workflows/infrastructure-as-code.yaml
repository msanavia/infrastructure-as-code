name: "Infrastructure as Code"

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened

permissions:
  contents: write
  pull-requests: write

jobs:
  pr_title_check:
    name: PR Title Check
    runs-on: ubuntu-latest
    steps:
      - uses: amannn/action-semantic-pull-request@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            chore
            feat
            feature
            fix
            JIRA-\d+
          scopes: |
            modules
            inputs
            ci
            JIRA-\d+
          requireScope: true
          disallowScopes: |
            release
            [A-Z]+
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            didn't match the configured pattern. Please ensure that the subject
            doesn't start with an uppercase character.
          ignoreLabels: |
            bot
            ignore-semantic-pull-request
          headerPatternCorrespondence: type, scope, subject
  format_validate:
    name: Format and Validate files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Terragrunt and OpenTofu
        uses: gruntwork-io/terragrunt-action@v3
      - name: "Format: Inputs"
        run: |
          cd inputs
          terragrunt hcl fmt --all --check --diff
      - name: "Format: Modules"
        run: |
          cd modules
          tofu fmt --recursive --check --diff
      - name: "Validate: Inputs"
        run: terragrunt hcl validate --all --inputs --strict
      - name: "Validate: Modules"
        run: |
          find ./modules -type f -name '*.tf' -exec dirname {} \; | sort -u | while read dir; do
            echo "Validating $dir"
            (cd "$dir" && tofu init -input=false -backend=false > /dev/null && tofu validate)
          done
      - name: "Validate: JSON and YAML files"
        id: json-yaml-validate
        uses: GrantBirki/json-yaml-validate@v3.3.2
        with:
          comment: "true"
  trufflehog:
    name: TruffleHog Secret Scanning 
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Secret Scanning
      uses: trufflesecurity/trufflehog@main
      with:
          base: ""
          head: ${{ github.ref_name }}
          extra_args: --results=verified,unknown
  documentation:
    name: Generate terraform docs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.ref }}
    - name: Render terraform docs inside the README.md and push changes back to PR branch
      uses: terraform-docs/gh-actions@v1.4.1
      with:
        working-dir: .
        output-file: README.md
        output-method: replace
        git-push: "true"
        recursive: "true"
